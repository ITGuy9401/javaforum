<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.arcangelovicedomini.javaforum</groupId>
	<artifactId>javaforum</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>Java Forum</name>
	<description>J2EE/AngularJS Forum CMS</description>
	<url>https://github.com/ITGuy9401/javaforum</url>
	<inceptionYear>2015</inceptionYear>
	<issueManagement>
		<url>https://github.com/ITGuy9401/javaforum/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>
	<scm>
		<url>https://github.com/ITGuy9401/javaforum</url>
		<connection>scm:git:git://github.com/ITGuy9401/javaforum.git</connection>
		<developerConnection>scm:git:git@github.com:ITGuy9401/javaforum.git</developerConnection>
	</scm>
	<licenses>
		<license>
			<name>GPL v3 Licence</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.en.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<email>io@arcangelovicedomini.eu</email>
			<name>Arcangelo Vicedomini</name>
			<url>https://github.com/ITGuy9401</url>
			<id>ITGuy9401</id>
		</developer>
	</developers>
	<dependencyManagement>
		<dependencies>
		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>install</defaultGoal>
		<!-- To change from default src/main/java and src/test/java - doesn't work 
			for Cobertura> <sourceDirectory>src</sourceDirectory> <testSourceDirectory>src-test</testSourceDirectory -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${project.basedir}</directory>
								<includes>
									<include>*.log</include>
									<include>**/*.exc</include>
									<include>**/*.bak</include>
								</includes>
								<excludes>
									<!-- Allow mvn clean install > install.log -->
									<exclude>build.log</exclude>
									<exclude>install.log</exclude>
								</excludes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<id>add-target-src</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>target/src/main/java</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-target-test</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>target/src/test/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<compilerArgument>-Xlint:cast,unchecked,fallthrough,finally,serial</compilerArgument>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<useUniqueVersions>false</useUniqueVersions>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
								<url>${project.url}</url>
							</manifestEntries>
						</archive>
						<excludes>
							<exclude>**/*.ref</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- Comment to run Eclipse plugin for top level project only, as part 
					of mda install. See mda/eclipse.bat -->
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<inherited>true</inherited>
					<configuration>
						<wtpversion>1.5</wtpversion>
						<buildOutputDirectory>target/classes</buildOutputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<!-- Automatically attach sources to build artifact as artifact-version-sources.jar 
						and deploy to local repository. Causes generate-sources phase to execute 
						twice if under plugins instead of pluginManagement - bug -->
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>1.1</version>
					<configuration>
						<contextFile>${project.basedir}/src/test/resources/context.xml</contextFile>
						<additionalConfigFilesDir>${project.basedir}/src/test/resources</additionalConfigFilesDir>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<!-- Missing velocity dependency when run from command line insteadd 
					of site -->
				<plugin>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.3</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.velocity</groupId>
							<artifactId>velocity-tools</artifactId>
							<version>2.0-beta4</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<preparationGoals>verify</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.3.0</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>You need at least Java ${java.version}!</message>
									<version>${java.version}</version>
								</requireJavaVersion>
								<requirePluginVersions>
									<message>Best Practice is to always define plugin versions!</message>
									<banSnapshots>false</banSnapshots>
									<phases>clean,deploy,site</phases>
								</requirePluginVersions>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>webapp</module>
		<module>core</module>
	</modules>
	<properties>
		<java.version>1.8</java.version>
		<downloadSources>true</downloadSources>
		<createChecksum>true</createChecksum>
		<uniqueVersion>false</uniqueVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<testdb.groupId>com.h2database</testdb.groupId>
		<testdb.artifactId>h2</testdb.artifactId>
		<testdb.version>1.3.168</testdb.version>
		<testdb.driver>org.h2.Driver</testdb.driver>
		<testdb.dialect>org.hibernate.dialect.H2Dialect</testdb.dialect>
		<!-- See http://www.h2database.com/html/features.html#database_url (mixed 
			mode) -->
		<testdb.url>jdbc:h2:~/${application.id};AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</testdb.url>
		<testdb.username>sa</testdb.username>
		<testdb.password>sa</testdb.password>
		<!-- Change this to generate to the correct MDA database mappings, For 
			MySql use: MySQL For Hypersonic use: HypersonicSql For H2 use: H2Sql For 
			Oracle9i use: Oracle9i For DB2 use: DB2 For Informix use: InformixDB For 
			MSSQL use: MSSQL For Pointbase use: PointBase For Postgres use: PostgreSQL 
			For Sybase use: Sybase For SapDB use: SapDB For Derby use: Derby -->
		<sql.mappings>
			MySQL
		</sql.mappings>
		<!-- Change this for the appropriate database For DB2 use: org.hibernate.dialect.DB2Dialect 
			or org.hibernate.dialect.DB2390Dialect org.hibernate.dialect.DB2400Dialect 
			For Derby use: org.hibernate.dialect.DerbyDialect For H2 use: org.hibernate.dialect.H2Dialect 
			For Hypersonic use: org.hibernate.dialect.HSQLDialect For Informix use: org.hibernate.dialect.InformixDialect 
			For MySql4 use: org.hibernate.dialect.MySQLDialect For MySql5+ use: org.hibernate.dialect.MySQL5Dialect 
			For MySql InnoDB use: org.hibernate.dialect.MySQL5InnoDBDialect For MySql 
			MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect For MSSQL use: org.hibernate.dialect.SQLServerDialect 
			For Oracle any version use: org.hibernate.dialect.OracleDialect For Oracle8i 
			use: org.hibernate.dialect.Oracle8iDialect For Oracle9i use: org.hibernate.dialect.Oracle9iDialect 
			For Oracle10g or later use: org.hibernate.dialect.Oracle10gDialect For Pointbase 
			use: org.hibernate.dialect.PointbaseDialect For Postgres use: org.hibernate.dialect.PostgreSQLDialect 
			For Progress use: org.hibernate.dialect.ProgressDialect For SapDB use: org.hibernate.dialect.SAPDBDialect 
			For Sybase use: org.hibernate.dialect.SybaseDialect or org.hibernate.dialect.Sybase11Dialect 
			For Sybase Anywhere use: org.hibernate.dialect.SybaseAnywhereDialect -->
		<hibernate.dialect>
			org.hibernate.dialect.MySQL5Dialect
		</hibernate.dialect>
		<tomcat.home>${env.CATALINA_HOME}</tomcat.home>
		<application.id>javaforum</application.id>
		<application.package>eu.arcangelovicedomini.javaforum</application.package>
		<application.name>JavaForum</application.name>
		<dataSource.name>jdbc/JavaForumDS</dataSource.name>
		<dataSource>java:comp/env/${dataSource.name}</dataSource>
		<hibernate.version>5.2.1.Final</hibernate.version>
		<spring.version>4.3.1.RELEASE</spring.version>
		<!-- SCM user ID and Password here, or in user specific settings.xml file -->
		<username></username>
		<password></password>
		<maven-javadoc-plugin.version>2.8.1</maven-javadoc-plugin.version>
	</properties>
	<profiles>
		<!--Profile configuration for local builds, activeByDefault, customize 
			for your project -->
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Change driver path and jar for appropriate database For MySQL use: 
					mysql-connector-java-X-bin.jar For Hypersonic use: hsqldb.jar -->
				<jdbc.driver.jar>
					mysql-connector-java-5.1.16.jar
				</jdbc.driver.jar>
				<!-- Change driver for appropriate database For MySQL use: com.mysql.jdbc.Driver 
					For H2 use: org.h2.Driver For Hypersonic use: org.hsqldb.jdbcDriver For Oracle9i 
					use: oracle.jdbc.driver.OracleDriver For DB2 use: COM.ibm.db2.jdbc.app.DB2Driver 
					For Informix use: com.informix.jdbc.IfxDriver For MSSQL use: com.microsoft.jdbc.sqlserver.SQLServerDriver 
					For Pointbase use: com.pointbase.jdbc.jdbcUniversalDriver For Postgres use: 
					org.postgresql.Driver For Sybase use: com.sybase.jdbc2.jdbc.SybDataSource 
					For SapDB use: com.sap.dbtech.jdbc.DriverSapDB For Progress use: com.progress.sql.jdbc.JdbcProgressDriver 
					For Derby use: org.apache.derby.jdbc.EmbeddedDriver -->
				<jdbc.driver>
					com.mysql.jdbc.Driver
				</jdbc.driver>
				<!-- Change connection url for appropriate database For MySQL use: jdbc:mysql://localhost:3306/javaforum 
					For Hypersonic use: jdbc:hsqldb:hsql://127.0.0.1:1701 For Oracle9i use: jdbc:oracle:thin:@localhost:1521:yoursid 
					For DB2 use: jdbc:db2:javaforum For Informix use: jdbc:informix-sqli://localhost:1557/javaforum:INFORMIXSERVER=myserver 
					For MSSQL use: jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=javaforum 
					For Pointbase use: jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.javaforum@,new 
					For Postgres use: jdbc:postgresql://localhost/javaforum For Sybase use: jdbc:sybase:Tds:localhost:5000/javaforum?JCONNECT_VERSION=6 
					For SapDB use: jdbc:sapdb://127.0.0.1/javaforum For Progress use: jdbc:JdbcProgress:T:localhost:3305:javaforum -->
				<jdbc.url>
					jdbc:mysql://localhost:3306/javaforum
				</jdbc.url>
				<!-- Enter id/password for the database connection -->
				<jdbc.username>javaforum</jdbc.username>
				<jdbc.password>javaforum</jdbc.password>
				<!-- Change exception sorter class name for appropriate database For 
					MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter For 
					Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter 
					For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter 
					For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter 
					For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter 
					For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter -->
				<jdbc.exception.sorter>
					org.jboss.resource.adapter.jdbc.MySQLExceptionSorter
				</jdbc.exception.sorter>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-compiler-plugin</artifactId>
						</plugin>
						<plugin>
							<artifactId>maven-surefire-plugin</artifactId>
						</plugin>
						<plugin>
							<artifactId>maven-site-plugin</artifactId>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<!-- Create/install javadoc and test-javadoc jars during the build. Run 
			as part of deploy process. Central synch requires source and javadocs artifacts. -->
		<profile>
			<id>javadocs</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<executions>
							<execution>
								<id>javadoc-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
							<execution>
								<id>test-jar</id>
								<phase>package</phase>
								<goals>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<show>package</show>
							<version>true</version>
							<javadocVersion>${source.version}</javadocVersion>
							<failOnError>false</failOnError>
							<linksource>true</linksource>
							<detectLinks>true</detectLinks>
							<detectOfflineLinks>true</detectOfflineLinks>
							<links>
								<link>http://download.oracle.com/javase/6/docs/api/</link>
								<link>http://download.oracle.com/javaee/1.4/api/</link>
								<link>http://download.eclipse.org/modeling/mdt/uml2/javadoc/3.1.0/</link>
								<link>http://download.eclipse.org/modeling/emf/emf/javadoc/2.6.0/</link>
								<link>http://dom4j.sourceforge.net/dom4j-1.6.1/apidocs/</link>
								<link>http://freemarker.org/docs/api/</link>
								<link>http://groovy.codehaus.org/api/</link>
								<link>http://www.jajakarta.org/ant/ant-1.6.1/docs/ja/manual/api/</link>
								<link>http://jakarta.apache.org/commons/collections/apidocs/</link>
								<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
								<link>http://jakarta.apache.org/regexp/apidocs/</link>
								<link>http://jaxb.java.net/nonav/2.2.4/docs/api/</link>
								<link>http://logging.apache.org/log4j/docs/api/</link>
								<link>http://maven.apache.org/ref/2.2.1/maven-core/apidocs/</link>
								<link>http://maven.apache.org/ref/2.2.1/maven-plugin-api/apidocs/</link>
								<link>http://maven.apache.org/ref/2.2.1/maven-project/apidocs/</link>
								<link>http://maven.apache.org/ref/2.2.1/maven-artifact/apidocs/</link>
								<link>http://velocity.apache.org/engine/devel/apidocs/</link>
								<link>http://www.andromda.org/docs/jmi-uml1.4/</link>
								<link>http://www.csg.is.titech.ac.jp/~chiba/javassist/html/</link>
								<link>http://www.junit.org/junit/javadoc/</link>
							</links>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>
	<!-- Comment to disable project reporting using default maven plugins -->
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.5.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>cim</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>help</report>
							<report>index </report>
							<report>issue-tracking</report>
							<report>license</report>
							<report>mailing-list</report>
							<report>modules</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<minmemory>128m</minmemory>
					<maxmemory>1g</maxmemory>
					<sourcepath>${project.basedir}/src/main/java;${project.basedir}/target/src/main/java</sourcepath>
					<detectLinks />
					<links>
						<link>http://java.sun.com/javase/6/docs/api/</link>
						<link>http://java.sun.com/j2ee/1.4/docs/api/</link>
						<link>http://docs.jboss.org/hibernate/stable/core/javadocs/</link>
						<link>http://static.springsource.org/spring/docs/3.0.x/javadoc-api</link>
						<link>http://jakarta.apache.org/commons/collections/apidocs</link>
						<link>http://jakarta.apache.org/commons/lang/apidocs</link>
						<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
						<link>http://logging.apache.org/log4j/docs/api/</link>
						<link>http://www.junit.org/junit/javadoc/</link>
					</links>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12.3</version>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<targetJdk>${java.version}</targetJdk>
					<linkXRef>true</linkXRef>
					<rulesets>
						<ruleset>/rulesets/basic.xml</ruleset>
						<ruleset>/rulesets/braces.xml</ruleset>
						<ruleset>/rulesets/clone.xml</ruleset>
						<ruleset>/rulesets/codesize.xml</ruleset>
						<ruleset>/rulesets/controversial.xml</ruleset>
						<ruleset>/rulesets/coupling.xml</ruleset>
						<ruleset>/rulesets/design.xml</ruleset>
						<ruleset>/rulesets/finalizers.xml</ruleset>
						<ruleset>/rulesets/logging-java.xml</ruleset>
						<ruleset>/rulesets/j2ee.xml</ruleset>
						<ruleset>/rulesets/javabeans.xml</ruleset>
						<ruleset>/rulesets/junit.xml</ruleset>
						<ruleset>/rulesets/naming.xml</ruleset>
						<ruleset>/rulesets/optimizations.xml</ruleset>
						<ruleset>/rulesets/strictexception.xml</ruleset>
						<ruleset>/rulesets/strings.xml</ruleset>
						<ruleset>/rulesets/sunsecure.xml</ruleset>
						<ruleset>/rulesets/typeresolution.xml</ruleset>
						<ruleset>/rulesets/unusedcode.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<configLocation>config/maven_checks.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>
			<plugin>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.7.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
							<!-- Uncomment if using JIRA -->
							<!--report>jira-report</report -->
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<columnNames>Key,Type,Summary,Assignee,Status,Resolution,Priority,Component</columnNames>
					<sortColumnNames>Key</sortColumnNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
									<tag>
										<matchString>XXX</matchString>
										<matchType>exact</matchType>
									</tag>
									<tag>
										<matchString>@deprecated</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<!-- Uncomment after configuring SCM connection> <plugin> <artifactId>maven-changelog-plugin</artifactId> 
				<version>2.2</version> <reportSets> <reportSet> <id>All Reports</id> <configuration> 
				<type>range</type> <range>90</range> <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat> 
				</configuration> <reports> <report>changelog</report> <report>file-activity</report> 
				<report>dev-activity</report> </reports> </reportSet> </reportSets> </plugin -->
			<!--plugin> <artifactId>maven-docck-plugin</artifactId> <executions> <execution> 
				<goals> <goal>check</goal> </goals> </execution> </executions> </plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			<!-- Compare APIs to a previous version, uncomment when a release version 
				exists -->
			<!--plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>clirr-maven-plugin</artifactId> 
				<version>2.4</version> <inherited>true</inherited> <configuration> <minSeverity>info</minSeverity> 
				</configuration> </plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0</version>
				<inherited>true</inherited>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<effort>Default</effort>
					<threshold>Normal</threshold>
					<!--xmlOutputDirectory>directory location of findbugs xdoc xml report</xmlOutputDirectory> 
						<threshold>High|Normal|Low|Exp|Ignore</threshold> <effort>Min|Default|Max</effort> 
						<excludeFilterFile>findbugs-exclude.xml</excludeFilterFile> <includeFilterFile>findbugs-include.xml</includeFilterFile> 
						<visitors>FindDeadLocalStores,UnreadFields</visitors> <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors> 
						<onlyAnalyze>org.codehaus.mojo.findbugs.*</onlyAnalyze> <pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList> 
						<debug>true|false</debug> <relaxed>true|false</relaxed> <findbugsXmlOutput>true|false</findbugsXmlOutput> 
						<findbugsXmlOutputDirectory>location of legacy xml format report</findbugsXmlOutputDirectory -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>1.3.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!--plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>dashboard-maven-plugin</artifactId> 
				<version>1.0.0-beta-1</version> </plugin -->
			<!--plugin> <artifactId>maven-doap-plugin</artifactId> <version>1.0</version> 
				<configuration> <doapOptions> <programmingLanguage>java</programmingLanguage> 
				<category>build-management</category> </doapOptions> <asfExtOptions> <included>false</included> 
				</asfExtOptions> </configuration> </plugin -->
		</plugins>
	</reporting>
</project>