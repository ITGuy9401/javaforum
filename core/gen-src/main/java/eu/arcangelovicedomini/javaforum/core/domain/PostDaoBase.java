// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package eu.arcangelovicedomini.javaforum.core.domain;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>eu.arcangelovicedomini.javaforum.core.domain.Post</code>.
 * </p>
 *
 * @see eu.arcangelovicedomini.javaforum.core.domain.Post
 */
public abstract class PostDaoBase
    extends org.springframework.orm.hibernate.support.HibernateDaoSupport
    implements eu.arcangelovicedomini.javaforum.core.domain.PostDao
{

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#load(int, java.lang.Long)
     */
    public java.lang.Object load(final int transform, final java.lang.Long postId)
    {
        if (postId == null)
        {
            throw new IllegalArgumentException(
                "Post.load - 'postId' can not be null");
        }
        final java.lang.Object entity = this.getHibernateTemplate().get(eu.arcangelovicedomini.javaforum.core.domain.PostImpl.class, postId);
        return transformEntity(transform, (eu.arcangelovicedomini.javaforum.core.domain.Post)entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#load(java.lang.Long)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Post load(java.lang.Long postId)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Post)this.load(TRANSFORM_NONE, postId);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#loadAll()
     */
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(eu.arcangelovicedomini.javaforum.core.domain.PostImpl.class);
        this.transformEntities(transform, results);
        return results;
    }


    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(eu.arcangelovicedomini.javaforum.core.domain.Post)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Post create(eu.arcangelovicedomini.javaforum.core.domain.Post post)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Post)this.create(TRANSFORM_NONE, post);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(int transform, eu.arcangelovicedomini.javaforum.core.domain.Post)
     */
    public java.lang.Object create(final int transform, final eu.arcangelovicedomini.javaforum.core.domain.Post post)
    {
        if (post == null)
        {
            throw new IllegalArgumentException(
                "Post.create - 'post' can not be null");
        }
        this.getHibernateTemplate().save(post);
        return this.transformEntity(transform, post);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post>)
     */
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> create(final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(int, java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post>)
     */
    public java.util.Collection create(final int transform, final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Post.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate.HibernateCallback()
            {
                public java.lang.Object doInHibernate(net.sf.hibernate.Session session)
                    throws net.sf.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (eu.arcangelovicedomini.javaforum.core.domain.Post)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Post create(
        java.lang.String title,
        java.lang.String message,
        java.sql.Timestamp createdOn,
        java.sql.Timestamp editedOn)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Post)this.create(TRANSFORM_NONE, title, message, createdOn, editedOn);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(int, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp)
     */
    public java.lang.Object create(
        final int transform,
        java.lang.String title,
        java.lang.String message,
        java.sql.Timestamp createdOn,
        java.sql.Timestamp editedOn)
    {
        eu.arcangelovicedomini.javaforum.core.domain.Post entity = new eu.arcangelovicedomini.javaforum.core.domain.PostImpl();
        entity.setTitle(title);
        entity.setMessage(message);
        entity.setCreatedOn(createdOn);
        entity.setEditedOn(editedOn);
        return this.create(transform, entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(eu.arcangelovicedomini.javaforum.core.domain.Profile, java.sql.Timestamp, java.lang.String, eu.arcangelovicedomini.javaforum.core.domain.Thread, java.lang.String)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Post create(
        eu.arcangelovicedomini.javaforum.core.domain.Profile author,
        java.sql.Timestamp createdOn,
        java.lang.String message,
        eu.arcangelovicedomini.javaforum.core.domain.Thread thread,
        java.lang.String title)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Post)this.create(TRANSFORM_NONE, author, createdOn, message, thread, title);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#create(int, eu.arcangelovicedomini.javaforum.core.domain.Profile, java.sql.Timestamp, java.lang.String, eu.arcangelovicedomini.javaforum.core.domain.Thread, java.lang.String)
     */
    public java.lang.Object create(
        final int transform,
        eu.arcangelovicedomini.javaforum.core.domain.Profile author,
        java.sql.Timestamp createdOn,
        java.lang.String message,
        eu.arcangelovicedomini.javaforum.core.domain.Thread thread,
        java.lang.String title)
    {
        eu.arcangelovicedomini.javaforum.core.domain.Post entity = new eu.arcangelovicedomini.javaforum.core.domain.PostImpl();
        entity.setAuthor(author);
        entity.setCreatedOn(createdOn);
        entity.setMessage(message);
        entity.setThread(thread);
        entity.setTitle(title);
        return this.create(transform, entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#update(eu.arcangelovicedomini.javaforum.core.domain.Post)
     */
    public void update(eu.arcangelovicedomini.javaforum.core.domain.Post post)
    {
        if (post == null)
        {
            throw new IllegalArgumentException(
                "Post.update - 'post' can not be null");
        }
        this.getHibernateTemplate().update(post);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#update(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post>)
     */
    public void update(final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Post.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate.HibernateCallback()
            {
                public java.lang.Object doInHibernate(net.sf.hibernate.Session session)
                    throws net.sf.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((eu.arcangelovicedomini.javaforum.core.domain.Post)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#remove(eu.arcangelovicedomini.javaforum.core.domain.Post)
     */
    public void remove(eu.arcangelovicedomini.javaforum.core.domain.Post post)
    {
        if (post == null)
        {
            throw new IllegalArgumentException(
                "Post.remove - 'post' can not be null");
        }
        this.getHibernateTemplate().delete(post);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long postId)
    {
        if (postId == null)
        {
            throw new IllegalArgumentException(
                "Post.remove - 'postId' can not be null");
        }
        eu.arcangelovicedomini.javaforum.core.domain.Post entity = this.load(postId);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.PostDao#remove(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post>)
     */
    public void remove(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Post> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Post.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }
    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>eu.arcangelovicedomini.javaforum.core.domain.PostDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link eu.arcangelovicedomini.javaforum.core.domain.PostDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    protected java.lang.Object transformEntity(final int transform, final eu.arcangelovicedomini.javaforum.core.domain.Post entity)
    {
        java.lang.Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,eu.arcangelovicedomini.javaforum.core.domain.Post)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>eu.arcangelovicedomini.javaforum.core.domain.PostDao</code>
     * @param entities the collection of entities to transform
     * @see #transformEntity(int,eu.arcangelovicedomini.javaforum.core.domain.Post)
     */
    protected void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

}