// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package eu.arcangelovicedomini.javaforum.core.domain;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>eu.arcangelovicedomini.javaforum.core.domain.Area</code>.
 * </p>
 *
 * @see eu.arcangelovicedomini.javaforum.core.domain.Area
 */
public abstract class AreaDaoBase
    extends org.springframework.orm.hibernate.support.HibernateDaoSupport
    implements eu.arcangelovicedomini.javaforum.core.domain.AreaDao
{

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#load(int, java.lang.Long)
     */
    public java.lang.Object load(final int transform, final java.lang.Long areaId)
    {
        if (areaId == null)
        {
            throw new IllegalArgumentException(
                "Area.load - 'areaId' can not be null");
        }
        final java.lang.Object entity = this.getHibernateTemplate().get(eu.arcangelovicedomini.javaforum.core.domain.AreaImpl.class, areaId);
        return transformEntity(transform, (eu.arcangelovicedomini.javaforum.core.domain.Area)entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#load(java.lang.Long)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Area load(java.lang.Long areaId)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Area)this.load(TRANSFORM_NONE, areaId);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#loadAll()
     */
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        final java.util.Collection results = this.getHibernateTemplate().loadAll(eu.arcangelovicedomini.javaforum.core.domain.AreaImpl.class);
        this.transformEntities(transform, results);
        return results;
    }


    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(eu.arcangelovicedomini.javaforum.core.domain.Area)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Area create(eu.arcangelovicedomini.javaforum.core.domain.Area area)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Area)this.create(TRANSFORM_NONE, area);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(int transform, eu.arcangelovicedomini.javaforum.core.domain.Area)
     */
    public java.lang.Object create(final int transform, final eu.arcangelovicedomini.javaforum.core.domain.Area area)
    {
        if (area == null)
        {
            throw new IllegalArgumentException(
                "Area.create - 'area' can not be null");
        }
        this.getHibernateTemplate().save(area);
        return this.transformEntity(transform, area);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area>)
     */
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> create(final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(int, java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area>)
     */
    public java.util.Collection create(final int transform, final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Area.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate.HibernateCallback()
            {
                public java.lang.Object doInHibernate(net.sf.hibernate.Session session)
                    throws net.sf.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (eu.arcangelovicedomini.javaforum.core.domain.Area)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(java.lang.String)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Area create(
        java.lang.String title)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Area)this.create(TRANSFORM_NONE, title);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(int, java.lang.String)
     */
    public java.lang.Object create(
        final int transform,
        java.lang.String title)
    {
        eu.arcangelovicedomini.javaforum.core.domain.Area entity = new eu.arcangelovicedomini.javaforum.core.domain.AreaImpl();
        entity.setTitle(title);
        return this.create(transform, entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(eu.arcangelovicedomini.javaforum.core.domain.Forum, java.lang.String)
     */
    public eu.arcangelovicedomini.javaforum.core.domain.Area create(
        eu.arcangelovicedomini.javaforum.core.domain.Forum forum,
        java.lang.String title)
    {
        return (eu.arcangelovicedomini.javaforum.core.domain.Area)this.create(TRANSFORM_NONE, forum, title);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#create(int, eu.arcangelovicedomini.javaforum.core.domain.Forum, java.lang.String)
     */
    public java.lang.Object create(
        final int transform,
        eu.arcangelovicedomini.javaforum.core.domain.Forum forum,
        java.lang.String title)
    {
        eu.arcangelovicedomini.javaforum.core.domain.Area entity = new eu.arcangelovicedomini.javaforum.core.domain.AreaImpl();
        entity.setForum(forum);
        entity.setTitle(title);
        return this.create(transform, entity);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#update(eu.arcangelovicedomini.javaforum.core.domain.Area)
     */
    public void update(eu.arcangelovicedomini.javaforum.core.domain.Area area)
    {
        if (area == null)
        {
            throw new IllegalArgumentException(
                "Area.update - 'area' can not be null");
        }
        this.getHibernateTemplate().update(area);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#update(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area>)
     */
    public void update(final java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Area.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate.HibernateCallback()
            {
                public java.lang.Object doInHibernate(net.sf.hibernate.Session session)
                    throws net.sf.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((eu.arcangelovicedomini.javaforum.core.domain.Area)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#remove(eu.arcangelovicedomini.javaforum.core.domain.Area)
     */
    public void remove(eu.arcangelovicedomini.javaforum.core.domain.Area area)
    {
        if (area == null)
        {
            throw new IllegalArgumentException(
                "Area.remove - 'area' can not be null");
        }
        this.getHibernateTemplate().delete(area);
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long areaId)
    {
        if (areaId == null)
        {
            throw new IllegalArgumentException(
                "Area.remove - 'areaId' can not be null");
        }
        eu.arcangelovicedomini.javaforum.core.domain.Area entity = this.load(areaId);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see eu.arcangelovicedomini.javaforum.core.domain.AreaDao#remove(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area>)
     */
    public void remove(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.Area> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "Area.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }
    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>eu.arcangelovicedomini.javaforum.core.domain.AreaDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link eu.arcangelovicedomini.javaforum.core.domain.AreaDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    protected java.lang.Object transformEntity(final int transform, final eu.arcangelovicedomini.javaforum.core.domain.Area entity)
    {
        java.lang.Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,eu.arcangelovicedomini.javaforum.core.domain.Area)}
     * method. This method does not instantiate a new collection.
     * <p/>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>eu.arcangelovicedomini.javaforum.core.domain.AreaDao</code>
     * @param entities the collection of entities to transform
     * @see #transformEntity(int,eu.arcangelovicedomini.javaforum.core.domain.Area)
     */
    protected void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

}