// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package eu.arcangelovicedomini.javaforum.core.domain;

/**
 * @see eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration
 */
public interface UserConfigurationDao
{
    /**
     * This constant is used as a transformation flag; entities can be converted automatically into value objects
     * or other types, different methods in a class implementing this interface support this feature: look for
     * an <code>int</code> parameter called <code>transform</code>.
     * <p/>
     * This specific flag denotes no transformation will occur.
     */
    public final static int TRANSFORM_NONE = 0;

    /**
     * Loads an instance of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration from the persistent store.
     */
    public eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration load(java.lang.Long userConfigurationId);

    /**
     * <p>
     * Does the same thing as {@link #load(java.lang.Long)} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong> be transformed. If this flag is any of the other constants
     * defined in this class then the result <strong>WILL BE</strong> passed through an operation which can
     * optionally transform the entity (into a value object for example). By default, transformation does
     * not occur.
     * </p>
     *
     * @param userConfigurationId the identifier of the entity to load.
     * @return either the entity or the object transformed from the entity.
     */
    public Object load(int transform, java.lang.Long userConfigurationId);

    /**
     * Loads all entities of type {@link eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration}.
     *
     * @return the loaded entities.
     */
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> loadAll();

    /**
     * <p>
     * Does the same thing as {@link #loadAll()} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong> be transformed. If this flag is any of the other constants
     * defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     * transform the entity (into a value object for example). By default, transformation does
     * not occur.
     * </p>
     *
     * @param transform the flag indicating what transformation to use.
     * @return the loaded entities.
     */
    public java.util.Collection loadAll(final int transform);

    /**
     * Creates an instance of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration and adds it to the persistent store.
     */
    public eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration create(eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration userConfiguration);

    /**
     * <p>
     * Does the same thing as {@link #create(eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration)} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong> be transformed. If this flag is any of the other constants
     * defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     * transform the entity (into a value object for example). By default, transformation does
     * not occur.
     * </p>
     */
    public Object create(int transform, eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration userConfiguration);

    /**
     * Creates a new instance of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration and adds
     * from the passed in <code>entities</code> collection
     *
     * @param entities the collection of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration
     * instances to create.
     *
     * @return the created instances.
     */
    public java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> create(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> entities);

    /**
     * <p>
     * Does the same thing as {@link #create(eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration)} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong> be transformed. If this flag is any of the other constants
     * defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     * transform the entities (into value objects for example). By default, transformation does
     * not occur.
     * </p>
     */
    public java.util.Collection create(int transform, java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> entities);

    /**
     * <p>
     * Creates a new <code>eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration</code>
     * instance from <strong>all</strong> attributes and adds it to
     * the persistent store.
     * </p>
     */
    public eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration create(
        eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType accessType,
        java.lang.String attribute,
        eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType visibility);

    /**
     * <p>
     * Does the same thing as {@link #create(eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType, java.lang.String, eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType)} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong> be transformed. If this flag is any of the other constants
     * defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     * transform the entity (into a value object for example). By default, transformation does
     * not occur.
     * </p>
     */
    public Object create(
        int transform,
        eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType accessType,
        java.lang.String attribute,
        eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType visibility);

    /**
     * <p>
     * Creates a new <code>eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration</code>
     * instance from only <strong>required</strong> properties (attributes
     * and association ends) and adds it to the persistent store.
     * </p>
     */
    public eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration create(
        eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType accessType,
        java.lang.String attribute,
        eu.arcangelovicedomini.javaforum.core.domain.User user,
        eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType visibility);

    /**
     * <p>
     * Does the same thing as {@link #create(eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType, java.lang.String, eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType)} with an
     * additional flag called <code>transform</code>. If this flag is set to <code>TRANSFORM_NONE</code> then
     * the returned entity will <strong>NOT</strong be transformed. If this flag is any of the other constants
     * defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     * transform the entity (into a value object for example). By default, transformation does
     * not occur.
     * </p>
     */
    public Object create(
        int transform,
        eu.arcangelovicedomini.javaforum.core.domain.EnumAccessType accessType,
        java.lang.String attribute,
        eu.arcangelovicedomini.javaforum.core.domain.User user,
        eu.arcangelovicedomini.javaforum.core.domain.EnumVisibilityType visibility);

    /**
     * Updates the <code>userConfiguration</code> instance in the persistent store.
     */
    public void update(eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration userConfiguration);

    /**
     * Updates all instances in the <code>entities</code> collection in the persistent store.
     */
    public void update(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> entities);

    /**
     * Removes the instance of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration from the persistent store.
     */
    public void remove(eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration userConfiguration);

    /**
     * Removes the instance of eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration having the given
     * <code>identifier</code> from the persistent store.
     */
    public void remove(java.lang.Long userConfigurationId);

    /**
     * Removes all entities in the given <code>entities<code> collection.
     */
    public void remove(java.util.Collection<eu.arcangelovicedomini.javaforum.core.domain.UserConfiguration> entities);

}
